CREATE TABLE actions (
    aid character varying(255) DEFAULT '0'::character varying NOT NULL,
    type character varying(32) DEFAULT ''::character varying NOT NULL,
    callback character varying(255) DEFAULT ''::character varying NOT NULL,
    parameters bytea NOT NULL,
    label character varying(255) DEFAULT '0'::character varying NOT NULL
);
CREATE TABLE authmap (
    aid integer NOT NULL,
    uid integer DEFAULT 0 NOT NULL,
    authname character varying(128) DEFAULT ''::character varying NOT NULL,
    module character varying(128) DEFAULT ''::character varying NOT NULL,
    CONSTRAINT authmap_aid_check CHECK ((aid >= 0))
);
SEQUENCE authmap_aid_seq OWNED BY authmap.aid;
CREATE TABLE batch (
    bid bigint NOT NULL,
    token character varying(64) NOT NULL,
    "timestamp" integer NOT NULL,
    batch bytea,
    CONSTRAINT batch_bid_check CHECK ((bid >= 0))
);
CREATE TABLE block (
    bid integer NOT NULL,
    module character varying(64) DEFAULT ''::character varying NOT NULL,
    delta character varying(32) DEFAULT '0'::character varying NOT NULL,
    theme character varying(64) DEFAULT ''::character varying NOT NULL,
    status smallint DEFAULT 0 NOT NULL,
    weight integer DEFAULT 0 NOT NULL,
    region character varying(64) DEFAULT ''::character varying NOT NULL,
    custom smallint DEFAULT 0 NOT NULL,
    visibility smallint DEFAULT 0 NOT NULL,
    pages text NOT NULL,
    title character varying(64) DEFAULT ''::character varying NOT NULL,
    cache smallint DEFAULT 1 NOT NULL
);
SEQUENCE block_bid_seq OWNED BY block.bid;
CREATE TABLE block_custom (
    bid integer NOT NULL,
    body text,
    info character varying(128) DEFAULT ''::character varying NOT NULL,
    format character varying(255),
    CONSTRAINT block_custom_bid_check CHECK ((bid >= 0))
);
SEQUENCE block_custom_bid_seq OWNED BY block_custom.bid;
CREATE TABLE block_node_type (
    module character varying(64) NOT NULL,
    delta character varying(32) NOT NULL,
    type character varying(32) NOT NULL
);
CREATE TABLE block_role (
    module character varying(64) NOT NULL,
    delta character varying(32) NOT NULL,
    rid bigint NOT NULL,
    CONSTRAINT block_role_rid_check CHECK ((rid >= 0))
);
CREATE TABLE blocked_ips (
    iid integer NOT NULL,
    ip character varying(40) DEFAULT ''::character varying NOT NULL,
    CONSTRAINT blocked_ips_iid_check CHECK ((iid >= 0))
);
SEQUENCE blocked_ips_iid_seq OWNED BY blocked_ips.iid;
CREATE TABLE cache (
    cid character varying(255) DEFAULT ''::character varying NOT NULL,
    data bytea,
    expire integer DEFAULT 0 NOT NULL,
    created integer DEFAULT 0 NOT NULL,
    serialized smallint DEFAULT 0 NOT NULL
);
CREATE TABLE cache_block (
    cid character varying(255) DEFAULT ''::character varying NOT NULL,
    data bytea,
    expire integer DEFAULT 0 NOT NULL,
    created integer DEFAULT 0 NOT NULL,
    serialized smallint DEFAULT 0 NOT NULL
);
CREATE TABLE cache_bootstrap (
    cid character varying(255) DEFAULT ''::character varying NOT NULL,
    data bytea,
    expire integer DEFAULT 0 NOT NULL,
    created integer DEFAULT 0 NOT NULL,
    serialized smallint DEFAULT 0 NOT NULL
);
CREATE TABLE cache_field (
    cid character varying(255) DEFAULT ''::character varying NOT NULL,
    data bytea,
    expire integer DEFAULT 0 NOT NULL,
    created integer DEFAULT 0 NOT NULL,
    serialized smallint DEFAULT 0 NOT NULL
);
CREATE TABLE cache_filter (
    cid character varying(255) DEFAULT ''::character varying NOT NULL,
    data bytea,
    expire integer DEFAULT 0 NOT NULL,
    created integer DEFAULT 0 NOT NULL,
    serialized smallint DEFAULT 0 NOT NULL
);
CREATE TABLE cache_form (
    cid character varying(255) DEFAULT ''::character varying NOT NULL,
    data bytea,
    expire integer DEFAULT 0 NOT NULL,
    created integer DEFAULT 0 NOT NULL,
    serialized smallint DEFAULT 0 NOT NULL
);
CREATE TABLE cache_image (
    cid character varying(255) DEFAULT ''::character varying NOT NULL,
    data bytea,
    expire integer DEFAULT 0 NOT NULL,
    created integer DEFAULT 0 NOT NULL,
    serialized smallint DEFAULT 0 NOT NULL
);
CREATE TABLE cache_menu (
    cid character varying(255) DEFAULT ''::character varying NOT NULL,
    data bytea,
    expire integer DEFAULT 0 NOT NULL,
    created integer DEFAULT 0 NOT NULL,
    serialized smallint DEFAULT 0 NOT NULL
);
CREATE TABLE cache_page (
    cid character varying(255) DEFAULT ''::character varying NOT NULL,
    data bytea,
    expire integer DEFAULT 0 NOT NULL,
    created integer DEFAULT 0 NOT NULL,
    serialized smallint DEFAULT 0 NOT NULL
);
CREATE TABLE cache_path (
    cid character varying(255) DEFAULT ''::character varying NOT NULL,
    data bytea,
    expire integer DEFAULT 0 NOT NULL,
    created integer DEFAULT 0 NOT NULL,
    serialized smallint DEFAULT 0 NOT NULL
);
CREATE TABLE cache_update (
    cid character varying(255) DEFAULT ''::character varying NOT NULL,
    data bytea,
    expire integer DEFAULT 0 NOT NULL,
    created integer DEFAULT 0 NOT NULL,
    serialized smallint DEFAULT 0 NOT NULL
);
CREATE TABLE comment (
    cid integer NOT NULL,
    pid integer DEFAULT 0 NOT NULL,
    nid integer DEFAULT 0 NOT NULL,
    uid integer DEFAULT 0 NOT NULL,
    subject character varying(64) DEFAULT ''::character varying NOT NULL,
    hostname character varying(128) DEFAULT ''::character varying NOT NULL,
    created integer DEFAULT 0 NOT NULL,
    changed integer DEFAULT 0 NOT NULL,
    status integer DEFAULT 1 NOT NULL,
    thread character varying(255) NOT NULL,
    name character varying(60),
    mail character varying(64),
    homepage character varying(255),
    language character varying(12) DEFAULT ''::character varying NOT NULL,
    CONSTRAINT comment_status_check CHECK ((status >= 0))
);
SEQUENCE comment_cid_seq OWNED BY comment.cid;
CREATE TABLE date_format_locale (
    format character varying(100) NOT NULL,
    type character varying(64) NOT NULL,
    language character varying(12) NOT NULL
);
CREATE TABLE date_format_type (
    type character varying(64) NOT NULL,
    title character varying(255) NOT NULL,
    locked smallint DEFAULT 0 NOT NULL
);
CREATE TABLE date_formats (
    dfid integer NOT NULL,
    format character varying(100) NOT NULL,
    type character varying(64) NOT NULL,
    locked smallint DEFAULT 0 NOT NULL,
    CONSTRAINT date_formats_dfid_check CHECK ((dfid >= 0))
);
SEQUENCE date_formats_dfid_seq OWNED BY date_formats.dfid;
CREATE TABLE field_config (
    id integer NOT NULL,
    field_name character varying(32) NOT NULL,
    type character varying(128) NOT NULL,
    module character varying(128) DEFAULT ''::character varying NOT NULL,
    active smallint DEFAULT 0 NOT NULL,
    storage_type character varying(128) NOT NULL,
    storage_module character varying(128) DEFAULT ''::character varying NOT NULL,
    storage_active smallint DEFAULT 0 NOT NULL,
    locked smallint DEFAULT 0 NOT NULL,
    data bytea NOT NULL,
    cardinality smallint DEFAULT 0 NOT NULL,
    translatable smallint DEFAULT 0 NOT NULL,
    deleted smallint DEFAULT 0 NOT NULL
);
SEQUENCE field_config_id_seq OWNED BY field_config.id;
CREATE TABLE field_config_instance (
    id integer NOT NULL,
    field_id integer NOT NULL,
    field_name character varying(32) DEFAULT ''::character varying NOT NULL,
    entity_type character varying(32) DEFAULT ''::character varying NOT NULL,
    bundle character varying(128) DEFAULT ''::character varying NOT NULL,
    data bytea NOT NULL,
    deleted smallint DEFAULT 0 NOT NULL
);
SEQUENCE field_config_instance_id_seq OWNED BY field_config_instance.id;
CREATE TABLE field_data_body (
    entity_type character varying(128) DEFAULT ''::character varying NOT NULL,
    bundle character varying(128) DEFAULT ''::character varying NOT NULL,
    deleted smallint DEFAULT 0 NOT NULL,
    entity_id bigint NOT NULL,
    revision_id bigint,
    language character varying(32) DEFAULT ''::character varying NOT NULL,
    delta bigint NOT NULL,
    body_value text,
    body_summary text,
    body_format character varying(255),
    CONSTRAINT field_data_body_delta_check CHECK ((delta >= 0)),
    CONSTRAINT field_data_body_entity_id_check CHECK ((entity_id >= 0)),
    CONSTRAINT field_data_body_revision_id_check CHECK ((revision_id >= 0))
);
CREATE TABLE field_data_comment_body (
    entity_type character varying(128) DEFAULT ''::character varying NOT NULL,
    bundle character varying(128) DEFAULT ''::character varying NOT NULL,
    deleted smallint DEFAULT 0 NOT NULL,
    entity_id bigint NOT NULL,
    revision_id bigint,
    language character varying(32) DEFAULT ''::character varying NOT NULL,
    delta bigint NOT NULL,
    comment_body_value text,
    comment_body_format character varying(255),
    CONSTRAINT field_data_comment_body_delta_check CHECK ((delta >= 0)),
    CONSTRAINT field_data_comment_body_entity_id_check CHECK ((entity_id >= 0)),
    CONSTRAINT field_data_comment_body_revision_id_check CHECK ((revision_id >= 0))
);
CREATE TABLE field_data_field_image (
    entity_type character varying(128) DEFAULT ''::character varying NOT NULL,
    bundle character varying(128) DEFAULT ''::character varying NOT NULL,
    deleted smallint DEFAULT 0 NOT NULL,
    entity_id bigint NOT NULL,
    revision_id bigint,
    language character varying(32) DEFAULT ''::character varying NOT NULL,
    delta bigint NOT NULL,
    field_image_fid bigint,
    field_image_alt character varying(512),
    field_image_title character varying(1024),
    field_image_width bigint,
    field_image_height bigint,
    CONSTRAINT field_data_field_image_delta_check CHECK ((delta >= 0)),
    CONSTRAINT field_data_field_image_entity_id_check CHECK ((entity_id >= 0)),
    CONSTRAINT field_data_field_image_field_image_fid_check CHECK ((field_image_fid >= 0)),
    CONSTRAINT field_data_field_image_field_image_height_check CHECK ((field_image_height >= 0)),
    CONSTRAINT field_data_field_image_field_image_width_check CHECK ((field_image_width >= 0)),
    CONSTRAINT field_data_field_image_revision_id_check CHECK ((revision_id >= 0))
);
CREATE TABLE field_data_field_tags (
    entity_type character varying(128) DEFAULT ''::character varying NOT NULL,
    bundle character varying(128) DEFAULT ''::character varying NOT NULL,
    deleted smallint DEFAULT 0 NOT NULL,
    entity_id bigint NOT NULL,
    revision_id bigint,
    language character varying(32) DEFAULT ''::character varying NOT NULL,
    delta bigint NOT NULL,
    field_tags_tid bigint,
    CONSTRAINT field_data_field_tags_delta_check CHECK ((delta >= 0)),
    CONSTRAINT field_data_field_tags_entity_id_check CHECK ((entity_id >= 0)),
    CONSTRAINT field_data_field_tags_field_tags_tid_check CHECK ((field_tags_tid >= 0)),
    CONSTRAINT field_data_field_tags_revision_id_check CHECK ((revision_id >= 0))
);
CREATE TABLE field_revision_body (
    entity_type character varying(128) DEFAULT ''::character varying NOT NULL,
    bundle character varying(128) DEFAULT ''::character varying NOT NULL,
    deleted smallint DEFAULT 0 NOT NULL,
    entity_id bigint NOT NULL,
    revision_id bigint NOT NULL,
    language character varying(32) DEFAULT ''::character varying NOT NULL,
    delta bigint NOT NULL,
    body_value text,
    body_summary text,
    body_format character varying(255),
    CONSTRAINT field_revision_body_delta_check CHECK ((delta >= 0)),
    CONSTRAINT field_revision_body_entity_id_check CHECK ((entity_id >= 0)),
    CONSTRAINT field_revision_body_revision_id_check CHECK ((revision_id >= 0))
);
CREATE TABLE field_revision_comment_body (
    entity_type character varying(128) DEFAULT ''::character varying NOT NULL,
    bundle character varying(128) DEFAULT ''::character varying NOT NULL,
    deleted smallint DEFAULT 0 NOT NULL,
    entity_id bigint NOT NULL,
    revision_id bigint NOT NULL,
    language character varying(32) DEFAULT ''::character varying NOT NULL,
    delta bigint NOT NULL,
    comment_body_value text,
    comment_body_format character varying(255),
    CONSTRAINT field_revision_comment_body_delta_check CHECK ((delta >= 0)),
    CONSTRAINT field_revision_comment_body_entity_id_check CHECK ((entity_id >= 0)),
    CONSTRAINT field_revision_comment_body_revision_id_check CHECK ((revision_id >= 0))
);
CREATE TABLE field_revision_field_image (
    entity_type character varying(128) DEFAULT ''::character varying NOT NULL,
    bundle character varying(128) DEFAULT ''::character varying NOT NULL,
    deleted smallint DEFAULT 0 NOT NULL,
    entity_id bigint NOT NULL,
    revision_id bigint NOT NULL,
    language character varying(32) DEFAULT ''::character varying NOT NULL,
    delta bigint NOT NULL,
    field_image_fid bigint,
    field_image_alt character varying(512),
    field_image_title character varying(1024),
    field_image_width bigint,
    field_image_height bigint,
    CONSTRAINT field_revision_field_image_delta_check CHECK ((delta >= 0)),
    CONSTRAINT field_revision_field_image_entity_id_check CHECK ((entity_id >= 0)),
    CONSTRAINT field_revision_field_image_field_image_fid_check CHECK ((field_image_fid >= 0)),
    CONSTRAINT field_revision_field_image_field_image_height_check CHECK ((field_image_height >= 0)),
    CONSTRAINT field_revision_field_image_field_image_width_check CHECK ((field_image_width >= 0)),
    CONSTRAINT field_revision_field_image_revision_id_check CHECK ((revision_id >= 0))
);
CREATE TABLE field_revision_field_tags (
    entity_type character varying(128) DEFAULT ''::character varying NOT NULL,
    bundle character varying(128) DEFAULT ''::character varying NOT NULL,
    deleted smallint DEFAULT 0 NOT NULL,
    entity_id bigint NOT NULL,
    revision_id bigint NOT NULL,
    language character varying(32) DEFAULT ''::character varying NOT NULL,
    delta bigint NOT NULL,
    field_tags_tid bigint,
    CONSTRAINT field_revision_field_tags_delta_check CHECK ((delta >= 0)),
    CONSTRAINT field_revision_field_tags_entity_id_check CHECK ((entity_id >= 0)),
    CONSTRAINT field_revision_field_tags_field_tags_tid_check CHECK ((field_tags_tid >= 0)),
    CONSTRAINT field_revision_field_tags_revision_id_check CHECK ((revision_id >= 0))
);
CREATE TABLE file_managed (
    fid integer NOT NULL,
    uid bigint DEFAULT 0 NOT NULL,
    filename character varying(255) DEFAULT ''::character varying NOT NULL,
    uri character varying(255) DEFAULT ''::character varying NOT NULL,
    filemime character varying(255) DEFAULT ''::character varying NOT NULL,
    filesize bigint DEFAULT 0 NOT NULL,
    status smallint DEFAULT 0 NOT NULL,
    "timestamp" bigint DEFAULT 0 NOT NULL,
    CONSTRAINT file_managed_fid_check CHECK ((fid >= 0)),
    CONSTRAINT file_managed_filesize_check CHECK ((filesize >= 0)),
    CONSTRAINT file_managed_timestamp_check CHECK (("timestamp" >= 0)),
    CONSTRAINT file_managed_uid_check CHECK ((uid >= 0))
);
SEQUENCE file_managed_fid_seq OWNED BY file_managed.fid;
CREATE TABLE file_usage (
    fid bigint NOT NULL,
    module character varying(255) DEFAULT ''::character varying NOT NULL,
    type character varying(64) DEFAULT ''::character varying NOT NULL,
    id bigint DEFAULT 0 NOT NULL,
    count bigint DEFAULT 0 NOT NULL,
    CONSTRAINT file_usage_count_check CHECK ((count >= 0)),
    CONSTRAINT file_usage_fid_check CHECK ((fid >= 0)),
    CONSTRAINT file_usage_id_check CHECK ((id >= 0))
);
CREATE TABLE filter (
    format character varying(255) NOT NULL,
    module character varying(64) DEFAULT ''::character varying NOT NULL,
    name character varying(32) DEFAULT ''::character varying NOT NULL,
    weight integer DEFAULT 0 NOT NULL,
    status integer DEFAULT 0 NOT NULL,
    settings bytea
);
CREATE TABLE filter_format (
    format character varying(255) NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    cache smallint DEFAULT 0 NOT NULL,
    status integer DEFAULT 1 NOT NULL,
    weight integer DEFAULT 0 NOT NULL,
    CONSTRAINT filter_format_status_check CHECK ((status >= 0))
);
CREATE TABLE flood (
    fid integer NOT NULL,
    event character varying(64) DEFAULT ''::character varying NOT NULL,
    identifier character varying(128) DEFAULT ''::character varying NOT NULL,
    "timestamp" integer DEFAULT 0 NOT NULL,
    expiration integer DEFAULT 0 NOT NULL
);
SEQUENCE flood_fid_seq OWNED BY flood.fid;
CREATE TABLE history (
    uid integer DEFAULT 0 NOT NULL,
    nid integer DEFAULT 0 NOT NULL,
    "timestamp" integer DEFAULT 0 NOT NULL
);
CREATE TABLE image_effects (
    ieid integer NOT NULL,
    isid bigint DEFAULT 0 NOT NULL,
    weight integer DEFAULT 0 NOT NULL,
    name character varying(255) NOT NULL,
    data bytea NOT NULL,
    CONSTRAINT image_effects_ieid_check CHECK ((ieid >= 0)),
    CONSTRAINT image_effects_isid_check CHECK ((isid >= 0))
);
SEQUENCE image_effects_ieid_seq OWNED BY image_effects.ieid;
CREATE TABLE image_styles (
    isid integer NOT NULL,
    name character varying(255) NOT NULL,
    label character varying(255) DEFAULT ''::character varying NOT NULL,
    CONSTRAINT image_styles_isid_check CHECK ((isid >= 0))
);
SEQUENCE image_styles_isid_seq OWNED BY image_styles.isid;
CREATE TABLE menu_custom (
    menu_name character varying(32) DEFAULT ''::character varying NOT NULL,
    title character varying(255) DEFAULT ''::character varying NOT NULL,
    description text
);
CREATE TABLE menu_links (
    menu_name character varying(32) DEFAULT ''::character varying NOT NULL,
    mlid integer NOT NULL,
    plid bigint DEFAULT 0 NOT NULL,
    link_path character varying(255) DEFAULT ''::character varying NOT NULL,
    router_path character varying(255) DEFAULT ''::character varying NOT NULL,
    link_title character varying(255) DEFAULT ''::character varying NOT NULL,
    options bytea,
    module character varying(255) DEFAULT 'system'::character varying NOT NULL,
    hidden smallint DEFAULT 0 NOT NULL,
    external smallint DEFAULT 0 NOT NULL,
    has_children smallint DEFAULT 0 NOT NULL,
    expanded smallint DEFAULT 0 NOT NULL,
    weight integer DEFAULT 0 NOT NULL,
    depth smallint DEFAULT 0 NOT NULL,
    customized smallint DEFAULT 0 NOT NULL,
    p1 bigint DEFAULT 0 NOT NULL,
    p2 bigint DEFAULT 0 NOT NULL,
    p3 bigint DEFAULT 0 NOT NULL,
    p4 bigint DEFAULT 0 NOT NULL,
    p5 bigint DEFAULT 0 NOT NULL,
    p6 bigint DEFAULT 0 NOT NULL,
    p7 bigint DEFAULT 0 NOT NULL,
    p8 bigint DEFAULT 0 NOT NULL,
    p9 bigint DEFAULT 0 NOT NULL,
    updated smallint DEFAULT 0 NOT NULL,
    CONSTRAINT menu_links_mlid_check CHECK ((mlid >= 0)),
    CONSTRAINT menu_links_p1_check CHECK ((p1 >= 0)),
    CONSTRAINT menu_links_p2_check CHECK ((p2 >= 0)),
    CONSTRAINT menu_links_p3_check CHECK ((p3 >= 0)),
    CONSTRAINT menu_links_p4_check CHECK ((p4 >= 0)),
    CONSTRAINT menu_links_p5_check CHECK ((p5 >= 0)),
    CONSTRAINT menu_links_p6_check CHECK ((p6 >= 0)),
    CONSTRAINT menu_links_p7_check CHECK ((p7 >= 0)),
    CONSTRAINT menu_links_p8_check CHECK ((p8 >= 0)),
    CONSTRAINT menu_links_p9_check CHECK ((p9 >= 0)),
    CONSTRAINT menu_links_plid_check CHECK ((plid >= 0))
);
SEQUENCE menu_links_mlid_seq OWNED BY menu_links.mlid;
CREATE TABLE menu_router (
    path character varying(255) DEFAULT ''::character varying NOT NULL,
    load_functions bytea NOT NULL,
    to_arg_functions bytea NOT NULL,
    access_callback character varying(255) DEFAULT ''::character varying NOT NULL,
    access_arguments bytea,
    page_callback character varying(255) DEFAULT ''::character varying NOT NULL,
    page_arguments bytea,
    delivery_callback character varying(255) DEFAULT ''::character varying NOT NULL,
    fit integer DEFAULT 0 NOT NULL,
    number_parts smallint DEFAULT 0 NOT NULL,
    context integer DEFAULT 0 NOT NULL,
    tab_parent character varying(255) DEFAULT ''::character varying NOT NULL,
    tab_root character varying(255) DEFAULT ''::character varying NOT NULL,
    title character varying(255) DEFAULT ''::character varying NOT NULL,
    title_callback character varying(255) DEFAULT ''::character varying NOT NULL,
    title_arguments character varying(255) DEFAULT ''::character varying NOT NULL,
    theme_callback character varying(255) DEFAULT ''::character varying NOT NULL,
    theme_arguments character varying(255) DEFAULT ''::character varying NOT NULL,
    type integer DEFAULT 0 NOT NULL,
    description text NOT NULL,
    "position" character varying(255) DEFAULT ''::character varying NOT NULL,
    weight integer DEFAULT 0 NOT NULL,
    include_file text
);
CREATE TABLE node (
    nid integer NOT NULL,
    vid bigint,
    type character varying(32) DEFAULT ''::character varying NOT NULL,
    language character varying(12) DEFAULT ''::character varying NOT NULL,
    title character varying(255) DEFAULT ''::character varying NOT NULL,
    uid integer DEFAULT 0 NOT NULL,
    status integer DEFAULT 1 NOT NULL,
    created integer DEFAULT 0 NOT NULL,
    changed integer DEFAULT 0 NOT NULL,
    comment integer DEFAULT 0 NOT NULL,
    promote integer DEFAULT 0 NOT NULL,
    sticky integer DEFAULT 0 NOT NULL,
    tnid bigint DEFAULT 0 NOT NULL,
    translate integer DEFAULT 0 NOT NULL,
    CONSTRAINT node_nid_check CHECK ((nid >= 0)),
    CONSTRAINT node_tnid_check CHECK ((tnid >= 0)),
    CONSTRAINT node_vid_check CHECK ((vid >= 0))
);
CREATE TABLE node_access (
    nid bigint DEFAULT 0 NOT NULL,
    gid bigint DEFAULT 0 NOT NULL,
    realm character varying(255) DEFAULT ''::character varying NOT NULL,
    grant_view integer DEFAULT 0 NOT NULL,
    grant_update integer DEFAULT 0 NOT NULL,
    grant_delete integer DEFAULT 0 NOT NULL,
    CONSTRAINT node_access_gid_check CHECK ((gid >= 0)),
    CONSTRAINT node_access_grant_delete_check CHECK ((grant_delete >= 0)),
    CONSTRAINT node_access_grant_update_check CHECK ((grant_update >= 0)),
    CONSTRAINT node_access_grant_view_check CHECK ((grant_view >= 0)),
    CONSTRAINT node_access_nid_check CHECK ((nid >= 0))
);
CREATE TABLE node_comment_statistics (
    nid bigint DEFAULT 0 NOT NULL,
    cid integer DEFAULT 0 NOT NULL,
    last_comment_timestamp integer DEFAULT 0 NOT NULL,
    last_comment_name character varying(60),
    last_comment_uid integer DEFAULT 0 NOT NULL,
    comment_count bigint DEFAULT 0 NOT NULL,
    CONSTRAINT node_comment_statistics_comment_count_check CHECK ((comment_count >= 0)),
    CONSTRAINT node_comment_statistics_nid_check CHECK ((nid >= 0))
);
SEQUENCE node_nid_seq OWNED BY node.nid;
CREATE TABLE node_revision (
    nid bigint DEFAULT 0 NOT NULL,
    vid integer NOT NULL,
    uid integer DEFAULT 0 NOT NULL,
    title character varying(255) DEFAULT ''::character varying NOT NULL,
    log text NOT NULL,
    "timestamp" integer DEFAULT 0 NOT NULL,
    status integer DEFAULT 1 NOT NULL,
    comment integer DEFAULT 0 NOT NULL,
    promote integer DEFAULT 0 NOT NULL,
    sticky integer DEFAULT 0 NOT NULL,
    CONSTRAINT node_revision_nid_check CHECK ((nid >= 0)),
    CONSTRAINT node_revision_vid_check CHECK ((vid >= 0))
);
SEQUENCE node_revision_vid_seq OWNED BY node_revision.vid;
CREATE TABLE node_type (
    type character varying(32) NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    base character varying(255) NOT NULL,
    module character varying(255) NOT NULL,
    description text NOT NULL,
    help text NOT NULL,
    has_title integer NOT NULL,
    title_label character varying(255) DEFAULT ''::character varying NOT NULL,
    custom smallint DEFAULT 0 NOT NULL,
    modified smallint DEFAULT 0 NOT NULL,
    locked smallint DEFAULT 0 NOT NULL,
    disabled smallint DEFAULT 0 NOT NULL,
    orig_type character varying(255) DEFAULT ''::character varying NOT NULL,
    CONSTRAINT node_type_has_title_check CHECK ((has_title >= 0))
);
CREATE TABLE queue (
    item_id integer NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    data bytea,
    expire integer DEFAULT 0 NOT NULL,
    created integer DEFAULT 0 NOT NULL,
    CONSTRAINT queue_item_id_check CHECK ((item_id >= 0))
);
SEQUENCE queue_item_id_seq OWNED BY queue.item_id;
CREATE TABLE rdf_mapping (
    type character varying(128) NOT NULL,
    bundle character varying(128) NOT NULL,
    mapping bytea
);
CREATE TABLE registry (
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    type character varying(9) DEFAULT ''::character varying NOT NULL,
    filename character varying(255) NOT NULL,
    module character varying(255) DEFAULT ''::character varying NOT NULL,
    weight integer DEFAULT 0 NOT NULL
);
CREATE TABLE registry_file (
    filename character varying(255) NOT NULL,
    hash character varying(64) NOT NULL
);
CREATE TABLE role (
    rid integer NOT NULL,
    name character varying(64) DEFAULT ''::character varying NOT NULL,
    weight integer DEFAULT 0 NOT NULL,
    CONSTRAINT role_rid_check CHECK ((rid >= 0))
);
CREATE TABLE role_permission (
    rid bigint NOT NULL,
    permission character varying(128) DEFAULT ''::character varying NOT NULL,
    module character varying(255) DEFAULT ''::character varying NOT NULL,
    CONSTRAINT role_permission_rid_check CHECK ((rid >= 0))
);
SEQUENCE role_rid_seq OWNED BY role.rid;
CREATE TABLE search_dataset (
    sid bigint DEFAULT 0 NOT NULL,
    type character varying(16) NOT NULL,
    data text NOT NULL,
    reindex bigint DEFAULT 0 NOT NULL,
    CONSTRAINT search_dataset_reindex_check CHECK ((reindex >= 0)),
    CONSTRAINT search_dataset_sid_check CHECK ((sid >= 0))
);
CREATE TABLE search_index (
    word character varying(50) DEFAULT ''::character varying NOT NULL,
    sid bigint DEFAULT 0 NOT NULL,
    type character varying(16) NOT NULL,
    score real,
    CONSTRAINT search_index_sid_check CHECK ((sid >= 0))
);
CREATE TABLE search_node_links (
    sid bigint DEFAULT 0 NOT NULL,
    type character varying(16) DEFAULT ''::character varying NOT NULL,
    nid bigint DEFAULT 0 NOT NULL,
    caption text,
    CONSTRAINT search_node_links_nid_check CHECK ((nid >= 0)),
    CONSTRAINT search_node_links_sid_check CHECK ((sid >= 0))
);
CREATE TABLE search_total (
    word character varying(50) DEFAULT ''::character varying NOT NULL,
    count real
);
CREATE TABLE semaphore (
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    value character varying(255) DEFAULT ''::character varying NOT NULL,
    expire double precision NOT NULL
);
CREATE TABLE sequences (
    value integer NOT NULL,
    CONSTRAINT sequences_value_check CHECK ((value >= 0))
);
SEQUENCE sequences_value_seq OWNED BY sequences.value;
CREATE TABLE sessions (
    uid bigint NOT NULL,
    sid character varying(128) NOT NULL,
    ssid character varying(128) DEFAULT ''::character varying NOT NULL,
    hostname character varying(128) DEFAULT ''::character varying NOT NULL,
    "timestamp" integer DEFAULT 0 NOT NULL,
    cache integer DEFAULT 0 NOT NULL,
    session bytea,
    CONSTRAINT sessions_uid_check CHECK ((uid >= 0))
);
CREATE TABLE shortcut_set (
    set_name character varying(32) DEFAULT ''::character varying NOT NULL,
    title character varying(255) DEFAULT ''::character varying NOT NULL
);
CREATE TABLE shortcut_set_users (
    uid bigint DEFAULT 0 NOT NULL,
    set_name character varying(32) DEFAULT ''::character varying NOT NULL,
    CONSTRAINT shortcut_set_users_uid_check CHECK ((uid >= 0))
);
CREATE TABLE system (
    filename character varying(255) DEFAULT ''::character varying NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    type character varying(12) DEFAULT ''::character varying NOT NULL,
    owner character varying(255) DEFAULT ''::character varying NOT NULL,
    status integer DEFAULT 0 NOT NULL,
    bootstrap integer DEFAULT 0 NOT NULL,
    schema_version smallint DEFAULT (-1) NOT NULL,
    weight integer DEFAULT 0 NOT NULL,
    info bytea
);
CREATE TABLE taxonomy_index (
    nid bigint DEFAULT 0 NOT NULL,
    tid bigint DEFAULT 0 NOT NULL,
    sticky smallint DEFAULT 0,
    created integer DEFAULT 0 NOT NULL,
    CONSTRAINT taxonomy_index_nid_check CHECK ((nid >= 0)),
    CONSTRAINT taxonomy_index_tid_check CHECK ((tid >= 0))
);
CREATE TABLE taxonomy_term_data (
    tid integer NOT NULL,
    vid bigint DEFAULT 0 NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    description text,
    format character varying(255),
    weight integer DEFAULT 0 NOT NULL,
    CONSTRAINT taxonomy_term_data_tid_check CHECK ((tid >= 0)),
    CONSTRAINT taxonomy_term_data_vid_check CHECK ((vid >= 0))
);
SEQUENCE taxonomy_term_data_tid_seq OWNED BY taxonomy_term_data.tid;
CREATE TABLE taxonomy_term_hierarchy (
    tid bigint DEFAULT 0 NOT NULL,
    parent bigint DEFAULT 0 NOT NULL,
    CONSTRAINT taxonomy_term_hierarchy_parent_check CHECK ((parent >= 0)),
    CONSTRAINT taxonomy_term_hierarchy_tid_check CHECK ((tid >= 0))
);
CREATE TABLE taxonomy_vocabulary (
    vid integer NOT NULL,
    name character varying(255) DEFAULT ''::character varying NOT NULL,
    machine_name character varying(255) DEFAULT ''::character varying NOT NULL,
    description text,
    hierarchy integer DEFAULT 0 NOT NULL,
    module character varying(255) DEFAULT ''::character varying NOT NULL,
    weight integer DEFAULT 0 NOT NULL,
    CONSTRAINT taxonomy_vocabulary_hierarchy_check CHECK ((hierarchy >= 0)),
    CONSTRAINT taxonomy_vocabulary_vid_check CHECK ((vid >= 0))
);
SEQUENCE taxonomy_vocabulary_vid_seq OWNED BY taxonomy_vocabulary.vid;
CREATE TABLE url_alias (
    pid integer NOT NULL,
    source character varying(255) DEFAULT ''::character varying NOT NULL,
    alias character varying(255) DEFAULT ''::character varying NOT NULL,
    language character varying(12) DEFAULT ''::character varying NOT NULL,
    CONSTRAINT url_alias_pid_check CHECK ((pid >= 0))
);
SEQUENCE url_alias_pid_seq OWNED BY url_alias.pid;
CREATE TABLE users (
    uid bigint DEFAULT 0 NOT NULL,
    name character varying(60) DEFAULT ''::character varying NOT NULL,
    pass character varying(128) DEFAULT ''::character varying NOT NULL,
    mail character varying(254) DEFAULT ''::character varying,
    theme character varying(255) DEFAULT ''::character varying NOT NULL,
    signature character varying(255) DEFAULT ''::character varying NOT NULL,
    signature_format character varying(255),
    created integer DEFAULT 0 NOT NULL,
    access integer DEFAULT 0 NOT NULL,
    login integer DEFAULT 0 NOT NULL,
    status smallint DEFAULT 0 NOT NULL,
    timezone character varying(32),
    language character varying(12) DEFAULT ''::character varying NOT NULL,
    picture integer DEFAULT 0 NOT NULL,
    init character varying(254) DEFAULT ''::character varying,
    data bytea,
    CONSTRAINT users_uid_check CHECK ((uid >= 0))
);
CREATE TABLE users_roles (
    uid bigint DEFAULT 0 NOT NULL,
    rid bigint DEFAULT 0 NOT NULL,
    CONSTRAINT users_roles_rid_check CHECK ((rid >= 0)),
    CONSTRAINT users_roles_uid_check CHECK ((uid >= 0))
);
CREATE TABLE variable (
    name character varying(128) DEFAULT ''::character varying NOT NULL,
    value bytea NOT NULL
);
CREATE TABLE watchdog (
    wid integer NOT NULL,
    uid integer DEFAULT 0 NOT NULL,
    type character varying(64) DEFAULT ''::character varying NOT NULL,
    message text NOT NULL,
    variables bytea NOT NULL,
    severity integer DEFAULT 0 NOT NULL,
    link character varying(255) DEFAULT ''::character varying,
    location text NOT NULL,
    referer text,
    hostname character varying(128) DEFAULT ''::character varying NOT NULL,
    "timestamp" integer DEFAULT 0 NOT NULL,
    CONSTRAINT watchdog_severity_check CHECK ((severity >= 0))
);
SEQUENCE watchdog_wid_seq OWNED BY watchdog.wid;
ALTER TABLE ONLY actions
    ADD CONSTRAINT actions_pkey PRIMARY KEY (aid);
ALTER TABLE ONLY authmap
    ADD CONSTRAINT authmap_authname_key UNIQUE (authname);
ALTER TABLE ONLY authmap
    ADD CONSTRAINT authmap_pkey PRIMARY KEY (aid);
ALTER TABLE ONLY batch
    ADD CONSTRAINT batch_pkey PRIMARY KEY (bid);
ALTER TABLE ONLY block_custom
    ADD CONSTRAINT block_custom_info_key UNIQUE (info);
ALTER TABLE ONLY block_custom
    ADD CONSTRAINT block_custom_pkey PRIMARY KEY (bid);
ALTER TABLE ONLY block_node_type
    ADD CONSTRAINT block_node_type_pkey PRIMARY KEY (module, delta, type);
ALTER TABLE ONLY block
    ADD CONSTRAINT block_pkey PRIMARY KEY (bid);
ALTER TABLE ONLY block_role
    ADD CONSTRAINT block_role_pkey PRIMARY KEY (module, delta, rid);
ALTER TABLE ONLY block
    ADD CONSTRAINT block_tmd_key UNIQUE (theme, module, delta);
ALTER TABLE ONLY blocked_ips
    ADD CONSTRAINT blocked_ips_pkey PRIMARY KEY (iid);
ALTER TABLE ONLY cache_block
    ADD CONSTRAINT cache_block_pkey PRIMARY KEY (cid);
ALTER TABLE ONLY cache_bootstrap
    ADD CONSTRAINT cache_bootstrap_pkey PRIMARY KEY (cid);
ALTER TABLE ONLY cache_field
    ADD CONSTRAINT cache_field_pkey PRIMARY KEY (cid);
ALTER TABLE ONLY cache_filter
    ADD CONSTRAINT cache_filter_pkey PRIMARY KEY (cid);
ALTER TABLE ONLY cache_form
    ADD CONSTRAINT cache_form_pkey PRIMARY KEY (cid);
ALTER TABLE ONLY cache_image
    ADD CONSTRAINT cache_image_pkey PRIMARY KEY (cid);
ALTER TABLE ONLY cache_menu
    ADD CONSTRAINT cache_menu_pkey PRIMARY KEY (cid);
ALTER TABLE ONLY cache_page
    ADD CONSTRAINT cache_page_pkey PRIMARY KEY (cid);
ALTER TABLE ONLY cache_path
    ADD CONSTRAINT cache_path_pkey PRIMARY KEY (cid);
ALTER TABLE ONLY cache
    ADD CONSTRAINT cache_pkey PRIMARY KEY (cid);
ALTER TABLE ONLY cache_update
    ADD CONSTRAINT cache_update_pkey PRIMARY KEY (cid);
ALTER TABLE ONLY comment
    ADD CONSTRAINT comment_pkey PRIMARY KEY (cid);
ALTER TABLE ONLY date_format_locale
    ADD CONSTRAINT date_format_locale_pkey PRIMARY KEY (type, language);
ALTER TABLE ONLY date_format_type
    ADD CONSTRAINT date_format_type_pkey PRIMARY KEY (type);
ALTER TABLE ONLY date_formats
    ADD CONSTRAINT date_formats_formats_key UNIQUE (format, type);
ALTER TABLE ONLY date_formats
    ADD CONSTRAINT date_formats_pkey PRIMARY KEY (dfid);
ALTER TABLE ONLY field_config_instance
    ADD CONSTRAINT field_config_instance_pkey PRIMARY KEY (id);
ALTER TABLE ONLY field_config
    ADD CONSTRAINT field_config_pkey PRIMARY KEY (id);
ALTER TABLE ONLY field_data_body
    ADD CONSTRAINT field_data_body_pkey PRIMARY KEY (entity_type, entity_id, deleted, delta, language);
ALTER TABLE ONLY field_data_comment_body
    ADD CONSTRAINT field_data_comment_body_pkey PRIMARY KEY (entity_type, entity_id, deleted, delta, language);
ALTER TABLE ONLY field_data_field_image
    ADD CONSTRAINT field_data_field_image_pkey PRIMARY KEY (entity_type, entity_id, deleted, delta, language);
ALTER TABLE ONLY field_data_field_tags
    ADD CONSTRAINT field_data_field_tags_pkey PRIMARY KEY (entity_type, entity_id, deleted, delta, language);
ALTER TABLE ONLY field_revision_body
    ADD CONSTRAINT field_revision_body_pkey PRIMARY KEY (entity_type, entity_id, revision_id, deleted, delta, language);
ALTER TABLE ONLY field_revision_comment_body
    ADD CONSTRAINT field_revision_comment_body_pkey PRIMARY KEY (entity_type, entity_id, revision_id, deleted, delta, language);
ALTER TABLE ONLY field_revision_field_image
    ADD CONSTRAINT field_revision_field_image_pkey PRIMARY KEY (entity_type, entity_id, revision_id, deleted, delta, language);
ALTER TABLE ONLY field_revision_field_tags
    ADD CONSTRAINT field_revision_field_tags_pkey PRIMARY KEY (entity_type, entity_id, revision_id, deleted, delta, language);
ALTER TABLE ONLY file_managed
    ADD CONSTRAINT file_managed_pkey PRIMARY KEY (fid);
ALTER TABLE ONLY file_managed
    ADD CONSTRAINT file_managed_uri_key UNIQUE (uri);
ALTER TABLE ONLY file_usage
    ADD CONSTRAINT file_usage_pkey PRIMARY KEY (fid, type, id, module);
ALTER TABLE ONLY filter_format
    ADD CONSTRAINT filter_format_name_key UNIQUE (name);
ALTER TABLE ONLY filter_format
    ADD CONSTRAINT filter_format_pkey PRIMARY KEY (format);
ALTER TABLE ONLY filter
    ADD CONSTRAINT filter_pkey PRIMARY KEY (format, name);
ALTER TABLE ONLY flood
    ADD CONSTRAINT flood_pkey PRIMARY KEY (fid);
ALTER TABLE ONLY history
    ADD CONSTRAINT history_pkey PRIMARY KEY (uid, nid);
ALTER TABLE ONLY image_effects
    ADD CONSTRAINT image_effects_pkey PRIMARY KEY (ieid);
ALTER TABLE ONLY image_styles
    ADD CONSTRAINT image_styles_name_key UNIQUE (name);
ALTER TABLE ONLY image_styles
    ADD CONSTRAINT image_styles_pkey PRIMARY KEY (isid);
ALTER TABLE ONLY menu_custom
    ADD CONSTRAINT menu_custom_pkey PRIMARY KEY (menu_name);
ALTER TABLE ONLY menu_links
    ADD CONSTRAINT menu_links_pkey PRIMARY KEY (mlid);
ALTER TABLE ONLY menu_router
    ADD CONSTRAINT menu_router_pkey PRIMARY KEY (path);
ALTER TABLE ONLY node_access
    ADD CONSTRAINT node_access_pkey PRIMARY KEY (nid, gid, realm);
ALTER TABLE ONLY node_comment_statistics
    ADD CONSTRAINT node_comment_statistics_pkey PRIMARY KEY (nid);
ALTER TABLE ONLY node
    ADD CONSTRAINT node_pkey PRIMARY KEY (nid);
ALTER TABLE ONLY node_revision
    ADD CONSTRAINT node_revision_pkey PRIMARY KEY (vid);
ALTER TABLE ONLY node_type
    ADD CONSTRAINT node_type_pkey PRIMARY KEY (type);
ALTER TABLE ONLY node
    ADD CONSTRAINT node_vid_key UNIQUE (vid);
ALTER TABLE ONLY queue
    ADD CONSTRAINT queue_pkey PRIMARY KEY (item_id);
ALTER TABLE ONLY rdf_mapping
    ADD CONSTRAINT rdf_mapping_pkey PRIMARY KEY (type, bundle);
ALTER TABLE ONLY registry_file
    ADD CONSTRAINT registry_file_pkey PRIMARY KEY (filename);
ALTER TABLE ONLY registry
    ADD CONSTRAINT registry_pkey PRIMARY KEY (name, type);
ALTER TABLE ONLY role
    ADD CONSTRAINT role_name_key UNIQUE (name);
ALTER TABLE ONLY role_permission
    ADD CONSTRAINT role_permission_pkey PRIMARY KEY (rid, permission);
ALTER TABLE ONLY role
    ADD CONSTRAINT role_pkey PRIMARY KEY (rid);
ALTER TABLE ONLY search_dataset
    ADD CONSTRAINT search_dataset_pkey PRIMARY KEY (sid, type);
ALTER TABLE ONLY search_index
    ADD CONSTRAINT search_index_pkey PRIMARY KEY (word, sid, type);
ALTER TABLE ONLY search_node_links
    ADD CONSTRAINT search_node_links_pkey PRIMARY KEY (sid, type, nid);
ALTER TABLE ONLY search_total
    ADD CONSTRAINT search_total_pkey PRIMARY KEY (word);
ALTER TABLE ONLY semaphore
    ADD CONSTRAINT semaphore_pkey PRIMARY KEY (name);
ALTER TABLE ONLY sequences
    ADD CONSTRAINT sequences_pkey PRIMARY KEY (value);
ALTER TABLE ONLY sessions
    ADD CONSTRAINT sessions_pkey PRIMARY KEY (sid, ssid);
ALTER TABLE ONLY shortcut_set
    ADD CONSTRAINT shortcut_set_pkey PRIMARY KEY (set_name);
ALTER TABLE ONLY shortcut_set_users
    ADD CONSTRAINT shortcut_set_users_pkey PRIMARY KEY (uid);
ALTER TABLE ONLY system
    ADD CONSTRAINT system_pkey PRIMARY KEY (filename);
ALTER TABLE ONLY taxonomy_term_data
    ADD CONSTRAINT taxonomy_term_data_pkey PRIMARY KEY (tid);
ALTER TABLE ONLY taxonomy_term_hierarchy
    ADD CONSTRAINT taxonomy_term_hierarchy_pkey PRIMARY KEY (tid, parent);
ALTER TABLE ONLY taxonomy_vocabulary
    ADD CONSTRAINT taxonomy_vocabulary_machine_name_key UNIQUE (machine_name);
ALTER TABLE ONLY taxonomy_vocabulary
    ADD CONSTRAINT taxonomy_vocabulary_pkey PRIMARY KEY (vid);
ALTER TABLE ONLY url_alias
    ADD CONSTRAINT url_alias_pkey PRIMARY KEY (pid);
ALTER TABLE ONLY users
    ADD CONSTRAINT users_name_key UNIQUE (name);
ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (uid);
ALTER TABLE ONLY users_roles
    ADD CONSTRAINT users_roles_pkey PRIMARY KEY (uid, rid);
ALTER TABLE ONLY variable
    ADD CONSTRAINT variable_pkey PRIMARY KEY (name);
ALTER TABLE ONLY watchdog
    ADD CONSTRAINT watchdog_pkey PRIMARY KEY (wid);
